const fs = require("fs");
const path = require("path");
const exec = require("child_process").exec;
const unpacker = require("webpack-unpack");
const { deobfuscator } = require("./deobfuscator.js");

let unpackedDir = "unpacked";
let hasUnpackedAnything = false;

/*
	Helper function that saves the module passed in argument 1
*/

function saveModule(mod, loc) {

	hasUnpackedAnything = true;
	console.log("Saving " + (loc ? loc + " " : "") + "module " +mod.id);

	let header = "/*\n\tModule " + mod.id + "\n\tExtracted from " + loc + ".js\n\tGenerated by TweetDeck Disassembler\n\n"

	let source = mod.source;

	for (var dep in mod.deps) {
		header += "\tRequires m" + dep + ".js\n"
	}

	source = header + "*/\n\n" + source;

	source = source.replace(/(?<=require)\((?=\d{0,4}\))/g,"(\"./m").replace(/(?<=require\(\"(\.\/)m\d{0,4})\)/g,".js\")");

	fs.writeFileSync(unpackedDir + "/m"+mod.id+".js", source);

}

function unpack() {

	// Remove previously saved modules
	try {
		for (const file of fs.readdirSync(unpackedDir)) {
			fs.unlinkSync(path.join(unpackedDir, file));
		}
		fs.rmdirSync(unpackedDir);
	} catch(e) {}

	fs.mkdirSync(unpackedDir);

	for (const file of fs.readdirSync("./")) {
		if (file.match(/bundle(\.[a-f0-9]+)?\.js/g) !== null) {
			unpacker(fs.readFileSync("./" + file)).forEach(mod => saveModule(mod, "bundle"));
		}
		if (file.match(/vendor(\.[a-f0-9]+)?\.js/g) !== null) {
			unpacker(fs.readFileSync("./" + file)).forEach(mod => saveModule(mod, "vendor"));
		}
		if (file.match(/mapbox(\.[a-f0-9]+)?\.js/g) !== null) {
			unpacker(fs.readFileSync("./" + file)).forEach(mod => saveModule(mod, "mapbox"));
		}
		if (file.match(/vendors\~mapbox(\.[a-f0-9]+)?\.js/g) !== null) {
			unpacker(fs.readFileSync("./" + file)).forEach(mod => saveModule(mod, "vendors~mapbox"));
		}
	}

	if (!hasUnpackedAnything) {
		console.error("\nIt doesn't seem like we had anything to unpack.");
		console.log("Copy the corresponding TweetDeck JS files (bundle, vendor, mapbox, vendors~mapbox) to this project's root directory\n");
	}

	console.log("\nBeautifying modules... this may take a moment");

	exec("js-beautify " + unpackedDir + "/*.js", (err, stdout, stderr) => {
		if (err) {
			throw err;
		}
		process.exit(0);
	})
}

console.log("Starting TweetDeck Disassembler\n");

unpack();
